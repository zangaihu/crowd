<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.sh.entity.Role">
    <!--@mbg.generated-->
    <!--@Table t_role-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="CHAR" property="name" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.sh.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_role (`name`)
    values (#{name,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.sh.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sh.entity.Role">
    <!--@mbg.generated-->
    update t_role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sh.entity.Role">
    <!--@mbg.generated-->
    update t_role
    set `name` = #{name,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRoleByKeyword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"></include>
    from t_role
    where name like concat("%",#{keyword},"%")
  </select>
    <delete id="deleteRoleByIds" parameterType="List">
      delete from t_role
      where id in
      <foreach collection="list" item="id" separator=","
               open="(" close=")">
        #{id}

      </foreach>


    </delete>
  <select id="getAssignedRole" resultMap="BaseResultMap">
      select id,name from t_role where id in (select role_id
      from inner_admin_role
      where admin_id=#{adminId});

  </select>
    <select id="getUnAssignedRole" resultMap="BaseResultMap">
        select id,name from t_role where id not in (select role_id
        from inner_admin_role
        where admin_id=#{adminId});

    </select>


</mapper>